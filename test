// ¡IMPORTANTE! Reemplaza con la URL de tu repositorio Git.
// Asegúrate de que esta URL sea compatible con el tipo de credencial que vas a usar.
// Por ejemplo, si usas SSH Key, debe ser una URL SSH: git@github.com:usuario/repo.git
// Si usas Username/Password para HTTPS, debe ser una URL HTTPS: https://github.com/usuario/repo.git
def repoUrl = "git@github.com:user/co-yuuuu.git" // EJEMPLO: AJUSTA A TU REPO REAL

// Define la ruta absoluta a 'git' si no está en el PATH del servidor Jenkins.
// Puedes verificar esto en la terminal del servidor con 'which git'.
def gitPath = "/usr/bin/git" // <- AJUSTA ESTA RUTA SI ES NECESARIO (ej. "/usr/local/bin/git")

def branchList = [] // Siempre inicializamos como una lista vacía

try {
    def command = ["${gitPath}", "ls-remote", "--heads", repoUrl]

    def proc = command.execute()
    proc.waitFor()

    if (proc.exitValue() == 0) {
        // El comando fue exitoso, procesamos la salida.
        proc.text.readLines().each { line ->
            if (line.contains("refs/heads/")) {
                def parts = line.split("\\s+")
                if (parts.size() > 1) {
                    def branchName = parts[1].replace("refs/heads/", "")
                    branchList.add(branchName)
                }
            }
        }
        branchList.sort() // Ordenamos alfabéticamente
    } else {
        // El comando falló, agregamos el mensaje de error a la lista.
        def errorOutput = proc.err.text.trim()
        println "Error al ejecutar 'git ls-remote' en el parámetro: ${errorOutput}" // Esto irá al System Log
        branchList.add("ERROR: No se pudo listar ramas: ${errorOutput}") // Agregamos a la lista
        branchList.add("Verifica URL, credenciales o PATH de Git.") // Agregamos más detalles a la lista
    }
} catch (Throwable e) {
    // Captura cualquier excepción de Groovy o de la ejecución del comando.
    println "Excepción en el script del parámetro: ${e.getMessage()}" // Esto irá al System Log
    branchList.add("ERROR: Excepción inesperada: ${e.getMessage()}") // Agregamos a la lista
    branchList.add("Consulta el log del sistema para más detalles.") // Agregamos más detalles a la lista
}

return branchList // Siempre retornamos la lista (que ahora puede contener mensajes de error)
